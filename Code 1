% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 
%
%   2D Laplace Equation FDM Solver for a Rectangular Plate
%   Author: Ahmet Efe Seker
%   www.ahmetefeseker.com
%
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
clc
clear
%% Spatial Discretization
nx = 99;
ny = 99;
x = linspace(0,2,nx+2);
y = linspace(0,1,ny+2);
dx = x(2) - x(1);
dy = y(2) - y(1);
%% Boundary Conditions
BC_Top = 150;
BC_Bottom = 50;
BC_Right = 50;
BC_Left = 50;
%% Finite Difference Matrix
FDM = zeros(nx*ny);
for i=1:nx*ny
    for j=1:nx*ny
        FDM(i,i) = -2*(dx^2+dy^2);
    end
end
for i=1:nx*ny-1
    FDM(i,i+1) = dy^2;
    if mod(i,nx) == 0
        FDM(i,i+1) = 0;
    end
end
for i=1:nx*ny-1
    FDM(i+1,i) = dy^2;
    if mod(i,nx) == 0
        FDM(i+1,i) = 0;
    end
end
for i=1:nx*ny-nx
    FDM(i,i+nx) = dx^2;
end
for i=1:nx*ny-nx
    FDM(i+nx,i) = dx^2;
end
%% Right Hand Side Vector
RHS = zeros(nx*ny,1);
for i=1:nx
    RHS(i) = RHS(i) - BC_Top*dx^2;
end
for i=nx*ny-nx+1:nx*ny
    RHS(i) = RHS(i) - BC_Bottom*dx^2;
end
for i=1:nx:nx*ny
    RHS(i) = RHS(i) - BC_Left*dy^2;
end
for i=nx:nx:nx*ny
    RHS(i) = RHS(i) - BC_Right*dy^2;
end
%% Solution
T = FDM\RHS;
T_mat = zeros(ny+2,nx+2);
T_mat(end,1:end) = BC_Top;
T_mat(1,1:end) = BC_Bottom;
T_mat(1:end,end) = BC_Right;
T_mat(1:end,1) = BC_Left;
T_mat(end,1) = (BC_Top + BC_Left)/2;
T_mat(end,end) = (BC_Top + BC_Right)/2;
T_mat(1,1) = (BC_Bottom + BC_Left)/2;
T_mat(1,end) = (BC_Bottom + BC_Right)/2;
for i=1:ny
    T_mat(ny + 2 -i,2:nx+1) = T((i - 1)*nx + 1:i*nx);
end
%% Graph
figure(1)
surf(x,y,T_mat)
title('2D Laplace Equation')
xlabel('x')
ylabel('y')
colormap jet
shading interp
colorbar
